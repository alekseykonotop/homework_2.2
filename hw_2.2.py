import chardet

# print('Решение домашнего задания по лекции 2.2 "Работа с кодировками, русскими буквами"')
# Задача: по каждому файлу новостей вывести список 10 самых частовстречающихся слов
# длинной более 6 символов.
# == Алгоритм решения ==
#    Программа должна
# 0. Спрашивать у пользователя какой файл стоит проверить.
# 1. Открыть и декодировать текстовый файл
# 2. Создать множество из слов в этом файле, которые длиннее 6 символов
# 3. Для каждого элемента множества подсчитать сколько раз этот эл. встречается
#    в декодированном тексте и записать значение в словарь где ключ - слово, значение - кол-во слова в тексте
# 4. Создать массив состоящий из словарей, в котором только 1 пара (слово : кол-во вхождения)
# 5. Отсортировать массив по значению в словаре, т.е. по кол-ву вхождения ( слева самые частовстречаемые слова)
# 6. Вывести на экран только первые 10 элементов массива

# with open('newscy.txt', 'rb') as f:
#     data = f.read()
#     # print(data[:50])
#     result = chardet.detect(data)
#     print(result)
#     s = data.decode(result['encoding'])
#     print('s', s[:350])

# Функ. открытия и декодирования файла + формирует список слов длинной больше 6 символов
# Функ. создает множество значений слов из текста и подсчитывает сколько каждое слово из
#       множества встречается в текстовом файле
# Функ. сортировки по убыванию, возвращает первые 10 значений
# Функ. вывода на экран самых частовстречаемых в тексте первых 10 слов в файлах +
# Функ. запуска приложения +


def open_and_read_file(article):
    '''Функция открывает файл с переданным ей названием.

    Декодирует его с помощью импортируемой фунции chardet,
    создает список из всех слов в тексте файла, длинной больше 6 символов
    '''
    result_list = []
    with open(article, 'rb') as f:
        data = f.read()
        result = chardet.detect(data)
        s = data.decode(result['encoding'])
        s_list = s.strip().split(' ')
        for word in s_list:
            if len(word) > 6:
                result_list.append(word)
    return result_list

# open_and_read_file('newscy.txt')


###########
# Продолжить с этого места. Дописать функ. подсчета кол-ва слов, выводящую словарь с парами "слово:частота"
###########
def count_words_in_list(article):
    words_lst = open_and_read_file(article)
    set_of_words = set(words_lst)
    print('set_of_words', set_of_words)
    print(type(set_of_words))

count_words_in_list('newscy.txt')








# Функ. сортировки слов по частотности и формирование списка/массива ТОП 10
def get_top_words_list(article):
    ''' Функция сортирует ключи из словаря по их значению и возвращает

    список отсортированных 10 слов с максимальной частотностью.
    Для этого функция передает другой функ. значение article и получает с
    ловарь следующего типа:
    frequency_of_words_dict = { 'слово' : число, 'слово' : число }
    Далее этот словарь обрабатывается и формируется список слов по убыванию
    их частотности. Возвращает срез списка из первых 10 элементов.
    '''
    frequency_of_words_dict = get_frequency_of_words_dict(article)
    



# Функ. печати списка из Топ 10 слов
def print_result(article, top_words_list):
    '''Функция print_result выводит на экран название файла и список из топ 10 слов.'''
    print('В статье {0} чаще всего употребляются эти слова {1}'.format(article, top_words_list))


# Функ. запуска приложения
def ten_most_used_words():
    article_list = ['newsafr.txt', 'newscy.txt', 'newsfr.txt', 'newsit.txt']
    for article in article_list:
        top_words_list = get_top_words_list(article)
        print_result(article, top_words_list) # words_list - это список для конктерной статьи с 10 самыми частоупоминаемыми словами


# ten_most_used_words()
